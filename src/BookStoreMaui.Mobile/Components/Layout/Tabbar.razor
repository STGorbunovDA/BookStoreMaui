@inject NavigationManager NavigationManager

@inject IBookService BookService

<div class="tabbar d-flex justify-content-around align-items-center bg-white py-2 fixed-bottom">
    <a href="/" class="tab-link @ExploreClass">
        Explore
    </a>

    <a role="button" @onclick="SelectGenreAsync" class="tab-link">
        Top Genres
    </a>

    <a href="/genres" class="tab-link @AllGenresClass">
        Genres
    </a>
</div>

@code {
    private GenreDto[] _topGenres = [];

    protected override async Task OnInitializedAsync()
    {
        NavigationManager.LocationChanged += (_, __) => StateHasChanged();
        _topGenres = await BookService.GetGenresAsync(topOnly: true);
    }

    private string ExploreClass
    {
        get
        {
            // NavigationManager.Uri -- полный URL-адрес с указанием пути и строки запроса.
            // NavigationManager.BaseUri -- просто домен (с портом)
            //http://0.0.0.0?genre=science-fiction
            //http://0.0.0.0/?genre=science-fiction
            var path = NavigationManager.Uri.Replace(NavigationManager.BaseUri, "");
            if (string.IsNullOrWhiteSpace(path) || path == "/" || path.StartsWith("?") || path.StartsWith("/?"))
            {
                // мы знаем, что это страница
                // это означает, что в мобильной версии мы находимся на вкладке "Обзор"
                return "active";
            }
            return "";
        }
    }

    private string AllGenresClass =>
        NavigationManager.Uri.Contains("/genres") ? "active" : "";

    private async Task SelectGenreAsync()
    {
        string[] buttons = ["Top Books", .. _topGenres.Select(g => g.Name).ToArray()];

        var selectedGenre = await App.Current!.MainPage!.DisplayActionSheet("Select Genre", "Cancel", null, buttons);

        if(!string.IsNullOrWhiteSpace(selectedGenre) && selectedGenre != "Cancel")
        {
            if (selectedGenre == "Top Books")
            {
                NavigationManager.NavigateTo("/");
                return;
            }
            var genreSlug = _topGenres.First(g => g.Name == selectedGenre).Slug;
            NavigationManager.NavigateTo($"/?genre={genreSlug}");
        }
    }
}