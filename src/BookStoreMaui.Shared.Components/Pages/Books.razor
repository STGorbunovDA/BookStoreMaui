@page "/"
@page "/page/{pageNo:int?}"

@inject IBookService BookService
@inject ICommonService CommonService

@inject NavigationManager NavigationManager

<style>
    .genre-list {
        display: flex;
        justify-content: space-between;
        margin: 20px 0;
        background-color: white;
        border: 1px solid var(--color-very-light-gray);
        border-radius: 5px;
        overflow-x: auto;
        white-space: nowrap;
    }

        .genre-list::-webkit-scrollbar {
            height: 0;
        }

        .genre-list:hover::-webkit-scrollbar {
            height: 10px;
        }

        .genre-list::-webkit-scrollbar-thumb {
            background-color: transparent;
        }

        .genre-list:hover::-webkit-scrollbar-thumb {
            background-color: var(--color-main);
        }

        .genre-list::-webkit-scrollbar-track {
            background-color: lightgray;
        }

    .genre-item {
        padding: 10px;
    }

        .genre-item.active {
            background-color: var(--color-main);
            color: white;
            border-radius: 5px;
        }

    .genre-link {
        font-weight: bold;
        text-decoration: none;
        color: #555;
        font-size: 16px;
        padding: 10px;
    }

    .genre-item.active .genre-link {
        color: white;
    }

</style>

<PageTitle>Home | BookStoreMaui</PageTitle>

<SectionContent SectionName="PageTitle">
    @if (CommonService.IsWeb)
    {
        <h1 class="m-0 text-white fw-bold">BookStoreMaui</h1>
        <h3 class="text-white mt-2">A library of hundreds of popular books</h3>
    }
    else
    {
        <span>BookStoreMaui</span>
    }

</SectionContent>

<div class="container-lg">
    <div class="row">
        <div class="col-md-9">
            <div class="row">
                @if (CommonService.IsWeb)
                {
                    <div class="col-sm-12">
                        <div class="genre-list">
                            <div class="genre-item @(string.IsNullOrWhiteSpace(GenreSlug) ? "active" : "")">
                                <a class="genre-link" href="/" title="Top Books">Top Books</a>
                            </div>
                            @foreach (var g in _genres)
                            {
                                <div class="genre-item @(GenreSlug == g.Slug ? "active" : "")">
                                    <a class="genre-link" href="?genre=@g.Slug" title="@g.Name Books">@g.Name</a>
                                </div>
                            }
                        </div>
                    </div>
                }


                <h3 class="mt-2 mb-3 heading">@_heading</h3>

                <BooksGrid Books="_books" />

                <div class="paging w-100">
                    @if(CommonService.IsWeb)
                    {
                        <div class="d-flex justify-content-end align-items-center">
                           <Pagination NextPageUrl="@_nextPageUrl" PrevPageUrl="@_prevPageUrl" />
                        </div>
                    }
                    else
                    {
                        <div class="d-flex justify-content-between align-items-center">
                            <Pagination NextPageUrl="@_nextPageUrl" PrevPageUrl="@_prevPageUrl" />
                        </div>
                    }
                </div>

            </div>
        </div>
        <div class="col-md-3">
            <PopularBooks PopularBooksList="_popularBooks" />
        </div>
    </div>
</div>

@code {
    private const int PageSize = 16;

    [Parameter] public int? PageNo { get; set; }

    [SupplyParameterFromQuery(Name = "genre")]
    public string? GenreSlug { get; set; }

    // localhost:1234/?genre=fantasy
    // localhost:1234/page/2?genre=fantasy
    private string? _prevPageUrl;
    private string? _nextPageUrl;

    private GenreDto[] _genres = [];
    private BookListDto[] _books = [];
    private BookListDto[] _popularBooks = [];
    private int _totalCount = 0;

    private string _heading = "Top Books";

    protected override async Task OnParametersSetAsync()
    {
        if (PageNo < 2)
        {
            NavigationManager.NavigateTo("/?genre=");
            return;
        }

        CommonService.ShowLoader("Fetching...");
        var genreTask = BookService.GetGenresAsync(topOnly: false);
        var booksTask = BookService.GetBooksAsync(PageNo ?? 1, PageSize, GenreSlug);
        var popularTask = BookService.GetPopularBooksAsync(10, GenreSlug);

        _genres = await genreTask;
        (_books, _totalCount) = await booksTask;
        _popularBooks = await popularTask;

        SetPagingUrls();

        if (!string.IsNullOrWhiteSpace(GenreSlug))
        {
            var selectedGenre = _genres.FirstOrDefault(g => g.Slug == GenreSlug);
            if (selectedGenre.Name is not null)
            {
                _heading = $"{selectedGenre.Name} Books";
            }
            else
            {
                _heading = "Top Books";
            }
        }
        else
        {
            _heading = "Top Books";
        }

        if(PageNo > 1)
        {
            _heading += $" | Page {PageNo}";
        }
        CommonService.HideLoader();
    }

    private void SetPagingUrls()
    {
        var currentPageBookCount = _books.Length;

        var parts = NavigationManager.Uri.Split('?');
        var queryString = "";
        if (parts.Length > 1)
        {
            queryString = $"?{parts[1]}";
        }

        if (PageNo is null || PageNo == 1)
        {
            _prevPageUrl = null;

            if (currentPageBookCount < PageSize)
            {
                // У нас есть только страница, на ней больше нет записей
                // поэтому следующей страницы у нас не будет
                _nextPageUrl = null;
            }
            else
                _nextPageUrl = $"/page/2{queryString}";
        }
        else
        {
            if (PageNo > 2)
            {
                _prevPageUrl = $"/page/{(PageNo - 1)}{queryString}";
            }
            else
            {
                _prevPageUrl = $"/{queryString}";
            }


            if (currentPageBookCount < PageSize)
            {
                // У нас есть только страница, на ней больше нет записей
                // поэтому следующей страницы у нас не будет
                _nextPageUrl = null;
            }
            else
                _nextPageUrl = $"/page/{(PageNo + 1)}{queryString}";

        }
    }
}
